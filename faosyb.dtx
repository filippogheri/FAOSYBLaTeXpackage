% \iffalse
%<*gobble>
%
% Copyright 2013, FAO UN
%
%
% \fi 
% \CheckSum{0}
%
%
%% \CharacterTable
%%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%%   Digits        \0\1\2\3\4\5\6\7\8\9
%%   Exclamation   \!     Double quote  \"     Hash (number) \#
%%   Dollar        \$     Percent       \%     Ampersand     \&
%%   Acute accent  \'     Left paren    \(     Right paren   \)
%%   Asterisk      \*     Plus          \+     Comma         \,
%%   Minus         \-     Point         \.     Solidus       \/
%%   Colon         \:     Semicolon     \;     Less than     \<
%%   Equals        \=     Greater than  \>     Question mark \?
%%   Commercial at \@     Left bracket  \[     Backslash     \\
%%   Right bracket \]     Circumflex    \^     Underscore    \_
%%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%%   Right brace   \}     Tilde         \~} 
%
% \iffalse
%
%\section{Identification}
%\label{sec:ident}
%
% We start with the declaration who we are
%    \begin{macrocode}
%</gobble>
%<class>\NeedsTeXFormat{LaTeX2e}
%<*gobble>
\ProvidesFile{faosyb.dtx}
%</gobble>
%<class>\ProvidesClass{faosyb}
[2013/08/18 v0.1 Typesetting FAO Yearbook]
%<*gobble>
%    \end{macrocode}
%
%
% \fi
%
%\iffalse
%    \begin{macrocode}
\documentclass{ltxdoc}
\usepackage{array,graphpap}
\usepackage{hypdoc}
\PageIndex
\CodelineIndex
\RecordChanges
\EnableCrossrefs
\begin{document}
  \DocInput{faosyb.dtx}
\end{document}
%    \end{macrocode}
%</gobble> 
% \fi
% \MakeShortVerb{|}
% \GetFileInfo{faosyb.dtx}
% \newcommand{\progname}[1]{\textsf{#1}}
% \title{New \LaTeX{} Style for FAO Yearbook
%   \thanks{\copyright 2013, Food and Agriculture Organization of the
%   United Nations}} 
% \author{Boris Veytsman\thanks{%
% \href{mailto:borisv@lk.net}{\texttt{borisv@lk.net}},
% \href{mailto:boris@varphi.com}{\texttt{boris@varphi.com}}}} 
% \date{\filedate, \fileversion}
% \maketitle
% \begin{abstract}
%   This package provides class for typesetting FAO Yearbook.  This is
%   a refactoring of the \progname{faoyeabook} package
% \end{abstract}
%
%
%\section{Introduction}
%\label{sec:intro}
%
% The package \progname{faoyearbook}~\cite{faoyearbook11} was written
% in 2011 for FAO Statistical Yearbook.
%
% The package \progname{faosyb} is a refactoring of this package.  We
% use the lessons learned and incorporate new design requirements.  We
% use some (actually plenty) code from the previous version, but since
% we do not have to be compatibility, we can correct some unfortunate
% decisions.  
%
%\section{User Guide}
%\label{sec:user_guide}
%
% The installation of the class follows the usual
% practice~\cite{TeXFAQ} for \LaTeX{} packages:
% \begin{enumerate}
% \item Run \progname{latex} on |faosyb.ins|.  This will produce the
% \LaTeX{} class |faosyb.cls|.
% \item Put the file |faosyb.cls| to the place where \LaTeX{} can
%   find it (see \cite{TeXFAQ} or the documentation for your \TeX{}
%   system).\label{item:install}
% \item Update the database of file names.  Again, see \cite{TeXFAQ}
% or the documentation for your \TeX{} system for the system-specific
% details.\label{item:update}
% \item The file |faosyb.pdf| provides the documentation for the
% package (this is the file you are probably reading now).
% \end{enumerate}
% As an alternative to items~\ref{item:install} and~\ref{item:update}
% you can just put the file |faosyb.cls| in the working directory
% where your |.tex| file is.
%
%\subsection{Invocation}
%\label{sec:ug_invocation}
%
% To use the class, put in the preamble of your document
% \begin{flushleft}
% |\documentclass[|\meta{options}|]{faosyb}|
% \end{flushleft}
%
% If the option |web| (default) is chosen, the pages of the book have
% the dimensions corresponding to A4 paper.  However, if the option
% |print| is chosen, then the pages are printed on a wider area, and
% crop marks are added for the trimming.
%
% If the option |issuu| is chosen, the internal links are transformed
% to external in the form suitable for \url{http://www.issuu.com}.
% Note that this option probably does not make much sense unless |web|
% option is also chosen.  However, it is still possible to select both
% |print| and |issuu| option if someone needs it for an obscure
% purpose.  
%
%
%
% The option |Draft| (note the capitalization!) leads to the the large
% word `DRAFT' printed across the pages.  The standard \LaTeX{} option
% |draft| leads to the same result, but it also makes other changes,
% most notably, in the behavior of the |\includegraphics| command and
% warnings.  
%
% \DescribeMacro{\ifprint}
% It is possible to query the current mode using the macro
% \cmd{\ifprint}, for example
% \begin{verbatim}
% \ifprint
%   Stuff for print version
% \else
%   Stuff for web version
% \fi
% \end{verbatim}
% Any branch of this conditional may be empty, so web-only stuff can
% be coded as
% \begin{verbatim}
% \ifprint\else Web-only stuff\fi
% \end{verbatim}
% 
%
% \DescribeMacro{\includegraphics}
% There is a special facilty for \cmd{\includegraphics} command to
% choose a file depending on the current mode of the package.  Namely,
% if there is a file |image_print.pdf| visible by \LaTeX, then the commands
% |\includegraphics{image}| or  |\includegraphics{image.pdf}| selects
% the file |image_print.pdf|.  In the case this file is not found, the
% file |image.pdf| is selected instead.  Similarly in the web mode the
% file |image_web.pdf| will be selected first, and only if it does not
% exist, |image.pdf| is selected.  This rule works also for commands
% \cmd{\includeLargeGraphics} and \cmd{\includeExtraLargeGraphics}
% described below.
%
% Note that at this time there is no
% similar facility for the |\input| command.  
%
% 
%
%\subsection{Setting Parameters}
%\label{sec:ug_faoset}
%
% \DescribeMacro{\faoset}
% Some parameters in the class can be set with the command
% |\faoset|\marg{key=value}, for example
% \begin{verbatim}
% \faoset{bgcolor=blue}
% \end{verbatim}
% 
%
%  Most of the parameters are explained below.
%
%  One of the important parameters is |year|.  While the package at
%  this time does not provide facilities for the title pages, it needs
%  to know the year for the proper typesetting of footers.  The
%  command
% \begin{verbatim}
% \faoset{year=2013}
% \end{verbatim}
%  is used to provide this information.  
%
%\subsection{Fonts}
%\label{sec:ug_fonts}
%
%\DescribeMacro{\narrowfamily}
%\DescribeMacro{\textnarrow}
%\DescribeMacro{\captionfamily}
%\DescribeMacro{\textcaption}
% The class uses PT Sans fonts~\cite{Farar:ParaType} for body text and
% Arev fonts~\cite{Hartke:ArevSans} for math.  It defines two
% additional families: Narrow and Caption, corresponding to the PT
% Sans Narrow and PT Sans Caption font.  They can be selected by the
% declarations \cmd{\narrowfamily} and \cmd{\captionfamily} or by the
% commands \cmd{\textnarrow}\marg{text} and
% \cmd{\textcaption}\marg{text} following the usual \LaTeX{}
% conventions.  Note that since PT Sans does not provide math
% alphabet, this choice does not change the mathematical text.
%
% PT Sans Narrow may be useful for typesetting tables, for example,
% \begin{verbatim}
%  {\scriptsize\narrowfamily
%  \rowcolors{4}{@bgcolor!30}{@bgcolor!20}
%  \input{./Tables/P1.DEM_1.tex}}
% \end{verbatim}
%  
%
%\subsection{Colors and Icons for Parts}
%\label{sec:ug_color_icons}
%
% A Yearbook is separated into parts (more on this below).  Each part
% has its own color and icon.  They are set by the keys |bgcolor| and
% |icon| of the \cs{faoset} command, for example,
% \begin{verbatim}
% \faoset{icon=./Icons/agriculture.png}
% \faoset{icon=./Icons/population}
% \faoset{bgcolor=blue}
% \faoset{bgcolor=green!25!yellow}
% \end{verbatim}
% The parameter for the |icon| key can be any file name (with or
% without extension), suitable for the \cs{includegraphics} command.
% The parameter for the |bgcolor| key can be specified in any form
% acceptable by \progname{xcolor} package~\cite{Kern07:Xcolor}.  
%
% The key |tableheadcolor| sets the color for the headers of tables defined
% by |H| or |P| key (see Section~\ref{sec:ug_floats}).  Normally it is
% 30\% of the current |@bgcolor| color, but it can be set to any required
% value. 
%
% \DescribeMacro{\selecticon}\DescribeMacro{\selectcolor}
% Note that \cs{faoset} command does not change the icon or background
% color immediately.  When issued \emph{before} \cs{part} command, it
% sets up icon and color for the next part.  If needed, you can
% manually change this using \cs{selecticon} and \cs{selectcolor}
% commands.  In most cases you should \emph{not} use these commands.  
%
% \DescribeMacro{@bgcolor}
% \DescribeMacro{@tableheadcolor}
% \DescribeMacro{\currenticon}
% After a \cs{part} command (or explicit \cs{selecticon} and
% \cs{selectcolor} command we can access the current values of the
% color in |@bgcolor|, |@tablecolor| colors and \cs{currenticon}
% macro.  
%
%\subsection{Sectioning}
%\label{sec:ug_sections}
%
% \DescribeMacro{\part} 
% \DescribeMacro{\section} 
% \DescribeMacro{\subsection} 
%  The main division of the text are |\part|s.
%  The command \cmd{\part}\marg{title} is used for numbered parts, while the
%  command \cmd{\part*}\marg{title} is used for unnumbered parts.  The
%  next division are |\section|s and 
% |\subsection|s.  They are never numbered.  The style does not use
% |\chapter|s. 
%
% \DescribeMacro{\EndPartIntro}
% The sections immediately following new parts are special:  they are
% typeset in one column and cannot have floats.  The command
% |\EndPartIntro| switches to the ``normal'' sections.  
%
%
%
%\subsection{Floats}
%\label{sec:ug_floats}
%
% One of the most important changes from the previous version of the
% class~\cite{faoyearbook11} is the treatment of floats.
%
% In standard \LaTeX\ floats ``float'': they can be placed by the
% algorithm anywhere.  The previous version made them ``sticky'':  the
% author explicitly tells \TeX\ where floats should be placed.
% However, to do so the class required the author to make explicity
% page breaks, which was not very convenient.
%
% This version has a completely rewritten interface and algorithm for
% placing floats:
% \begin{enumerate}
% \item Like in standard \LaTeX, authors do not normally provide page
% breaks---\TeX\ tries to make this decision for them.
% \item Like in the previous version, floats are put exactly where the
% authors want them---no default placing and second-guessing.
% \end{enumerate}
% 
% Here is how it is done.  
%
% The main unit of the book is \emph{spread:} a verso page and the
% corresponding recto page.  Each page is divided into four quarters,
% upper left, upper right, lower left and lower right.  We will denote
% them \texttt{ul}, \texttt{ur}, \texttt{ll}, \texttt{lr} for the
% verso page and \texttt{UL}, \texttt{UR}, \texttt{LL}, \texttt{LR}
% for the recto page (Figure~\ref{fig:spread}).  We allow four kinds
% of floats:
% \begin{description}
% \item[Single floats] occupy exactly one quarter.  They are denoted as
% \texttt{S}.
% \item[Tall floats] occupy two quarters stacked vertically
% (for example, \texttt{ul} and \texttt{ll}).  They are denoted as
% \texttt{T}.
% \item[Wide floats] occupy two quarters adjacent horizontally (for
% example, \texttt{LL} and \texttt{LR}).  They are denoted as
% \texttt{W}.
% \item[Big floats] occupy all four quarters on a page.  They are
% denoted as \texttt{B}.  
% \end{description}
% 
%
%
% \begin{figure}
%   \centering
%   \begin{picture}(350,250)
%     \put(0,150){\framebox(75,100){ul}}
%     \put(75,150){\framebox(75,100){ur}}
%     \put(0,50){\framebox(75,100){ll}}
%     \put(75,50){\framebox(75,100){lr}}
%     \put(50,25){Verso page}
%     \put(200,150){\framebox(75,100){UL}}
%     \put(275,150){\framebox(75,100){UR}}
%     \put(200,50){\framebox(75,100){LL}}
%     \put(275,50){\framebox(75,100){LR}}
%     \put(250,25){Recto page}
%   \end{picture}
%   \caption{A Spread}
%   \label{fig:spread}
% \end{figure}
% 
% The parameters \marg{type} and \marg{location} are mandatory for
% floats, for example
% \begin{verbatim}
% \begin{map}{T}{ur}
%   ...
% \end{map}
% \begin{chart}{S}{UL}
%   ...
% \end{chart}
% \end{verbatim}
% For multiquarter floats the location is the location of the upper
% left corner, so Big float can use only |ul| or |UL| location.
%
% Of course, not all combinations are valid:  you cannot specify float
% as |{T}{ll}| or |{W}{UR}|, for example.  If you use such
% combinations, the results may be unpredictable.  Also it is not
% predictable what happens if you try to put overlapping floats
% (e.g. |{S}{UR}| and |{W}{UL}|).  
%
% There are two additional rules:
% \begin{enumerate}
% \item A verso page may have text and floats (still it is
% recommended that if it has text, then it should not have floats
% occupying the upper left corner).
% \item A recto page may have \emph{either} text \texttt{or} floats:
% if there are floats for this page, all text is moved to the
% following verso page.  
% \end{enumerate}
%  
% There are three
% types of floats defined by the class:
% \DescribeEnv{chart}
% \DescribeEnv{map}
% \DescribeEnv{table}
% \begin{description}
% \item[chart] plots and other charts,
% \item[map] mapped data.
% \item[table] mini tables.
% \end{description}
% \DescribeMacro{caption}
% Each of these kinds of material is typeset using the corresponding
% environment: |chart|, |table| or |map|.  Note that the caption for
% each of these environments \emph{must} precede the graphical
% material, for example:
% \begin{verbatim}
% \begin{chart}{B}{UL}
%   \caption{Hunger Data}
%   \label{chart:hunger}
%   \includegraphics{hunger.pdf}
% \end{chart}
% \end{verbatim}
% Note that our class redefines |table| environemnt!.  For tables on
% separate pages use |longtable|.
%
% \DescribeMacro{\chartwidth}
% \DescribeMacro{\chartheight}
% Inside a |chart|, |map| or |table| it is useful to know the size
% allocated for the graphics or table, for example, to be able to
% scale the graphics.  Two lengths, \cs{chartwidth} and
% \cs{chartheight} provide this information, so the user can say, for
% example,
% \begin{verbatim}
% \includegraphics[width=\chartwidth, height=\chartheight]{theChart}
% \end{verbatim}
% 
% \DescribeMacro{\source}
% Inside a a |chart|, |map| or |table| the macro
% \cs{source}\marg{source} gives the source of the information, for
% example,
% \begin{verbatim}
% \Source{FAO, Statistical Division [FAOSTAT]}
% \end{verbatim}
% 
%
% \DescribeMacro{\listoftables}
% \DescribeMacro{\listofcharts}
% \DescribeMacro{\listofmaps}
% The standard \LaTeX{} has the command |\listoftables| to produce the
% list of tables in the document.  Our class retains this command and
% produces two additional commands |\listofcharts| and |\listofmaps|
% with the obvious meaning.
%
%
%
%\subsection{Page Breaks}
%\label{sec:ug_page_breaks}
%
% \DescribeMacro{\clearpage}
% \DescribeMacro{\cleardoublepage}
% \DescribeMacro{\clearspread}
% Standard \LaTeX\ has commands for immediate page break
% (e.g. \cs{clearpage}) and for switching to the next recto page,
% possibly ejecting the next verso page (\cs{cleardoublepage}).  The
% class provides another command \cs{clearspread}.  It  switches to
% the next \emph{verso} page, possibly ejecting the next recto page
% (and putting there floats intended for this page, if any).  
%
%
%\subsection{Tables}
%\label{sec:ug_tables}
%
% To typeset numericall items one should use |d| column identifier
% with the format |d|\marg{a.b}, where $a$ is the number of decimal
% in the integer part of the number, and $b$ is the number of decimal
% digitst in the fractional part.  For example, a number $12.345$
% corresponds to |d{2.3}|.  The column headers are usually \emph{not}
% numerical, so one need to use \cmd{\multicolumn} entries to typeset
% them.  The class defines several such entries:
% \begin{description}
% \item[H] produces a centered entry.
% \item[P] produces an entry of a given length, for example,
% |P{1.5cm}|
%
% \item[C] produces an entry of the length corresponding to 
% the given number of numerical columns.  For example, |C{2}|
% corresponds to a header of two numerical columns.  Each column is
% assumed to be of the size enough to store $-99.999$.  
% \end{description}
% 
%
% \DescribeMacro{\hhline}
% For the rules that do not span the table width
% \cmd{\hhline}\marg{specificaiton} command from the \progname{hhline}
% package should be used.  The \marg{specification} argument of this
% command has many variants, but for our purposes we need only one
% variant: the command |-| produces a horizontal line spanning one
% column.  The color of this line is determined by the command
% \cmd{\arrayrulecolor}\marg{color}, issued in the last |>|\marg{argument}
% command before the |-| specification.  Therefore the command
% |>{\arrayrulecolor{@tableheadcolor}}-| produces a line of the color
% |@tableheadcolor|, which is seen as the absence of line.  The
% command |>{\arrayrulecolor{black}}---| produces a black line
% spanning three columns. Thus if we have a four-column table and want
% a rule spanning columns 2--3, the following command should be issued:
% \begin{verbatim}
%   \hhline{>{\arrayrulecolor{@tableheadcolor}}-% Column 1, no rule
%     >{\arrayrulecolor{black}}--%  Columns 2 and 3, black rule
%     >{\arrayrulecolor{@tableheadcolor}}-}% Column 4, no rule
% \end{verbatim}
% The usual |*| specification may be used for repeating patterns, for
% example, |*{5}{-}| is equivalent to |-----|.  
%
% The vertical bar \verb+|+ specification in the \cmd{\hhline}
% argument means an interruption of the line. The interruption is by
% defalut a black interval, to make it the same color as the header
% background, use \verb+>{\arrayrulecolor{@tableheadcolor}}|+. 
%
%\subsection{Publication Descriptions}
%\label{sec:ug_publications}
%
% \DescribeEnv{publication} FAO yearboook describes some FAO
% publications.  These publications should be put inside the
% environment |publication|.  The environment has one mandatory
% argument, which is the title of the publication, and one optional
% argument, which sets the file name of the publication cover. Note
% that the option argument, if present, must precede the mandatory
% one. If this
% argument is absent, no cover is included.
% \DescribeMacro{\pDescription} 
% \DescribeMacro{\pEdition} \DescribeMacro{\pCycle} 
% \DescribeMacro{pWeb}
% Inside the
% environment the macros \cmd{\pDescription}\marg{description},
% \cmd{\pEdition}\marg{year}\marg{edition}, \cmd{\pWeb}\marg{URL}
% and \cmd{\pCycle}\marg{date} are used to typeset the corresponding
% items related to the publication.  For example,
% \begin{verbatim}
% \begin{publication}[./Plots/StateOfFoodAndAgriculture.png]{The State
%     of Food and Agriculture}
%   \pDescription{The State of Food and Agriculture, FAO's major
%     annual flagship publication, aims at bringing to a wider
%     audience balanced science-based assessments of important issues
%     in the field of food and agriculture.  Each edition of the
%     report contains a comprehensive, yet easily accessible, overview
%     of a selected topic of major relevance for rural and
%     agricultural development and for global food security.  This is
%     supplemented by a synthetic overview of the current global
%     agricultural situation.}
%  \pEdition{2010}{Livestock in the balance}
%  \pEdition{2011}{Women in Agriculture Closing the gender gap for
%    development} 
%  \pCycle{May each year}
%  \pWeb{http://www.fao.org/docrep/013/i2050e/i2050e00.htm}
% \end{publication}
% \end{verbatim}
% Note that, as in the example, some fields may be repeated.  
%
% Two spacing parameters can be used for typesetting of publications:
% |publicationskip| is the amount of additional space between the publications,
% while |publicationparskip| is the space between the paragraphs
% inside the publication environment.  The default values correspond
% to the command
% \begin{verbatim}
% \faoset{publicationskip=6pt plus 2pt minus 2pt,
%         publicationparskip=6pt plus 6pt minus 4pt}
% \end{verbatim}
% 
% 
%
%\subsection{Metadata}
%\label{sec:ug_metadata}
%
% \DescribeEnv{MetadataCollection}
% \DescribeEnv{metadata}
% Each chart, map of table in the book has a \emph{source}.  Soruces
% are collected in the environemnt |MetadataCollection|, which consists
% of separate
% |metadata| environments.  Each |metadata| environment  has two obligatory
% arguments---the name of the source and the key.  The key is used to
% identify the metadata in the charts, maps, tables and other
% objects.  The environment may include other commands.
% \begin{description}
% \item[\cmd{\source}\marg{source}]\DescribeMacro{\source} sets the
% source of the data.
% \item[\cmd{\owner}\marg{owner}]\DescribeMacro{\owner} sets the owner
% of the data.
% \end{description}
% Note that there is no ``description'' command because any text which
% is not an argument of the commands above is considered to belong to
% the description of the data.
%
% Example of the usage of these commands:
% \begin{verbatim}
% \begin{MetadataCollection}
% \begin{metadata}{Agricultural population}{P1.DEM.FAO.POP.AGR} 
% 
%    Agricultural population is defined as all persons depending for
%    their livelihood on agriculture, hunting, fishing and forestry.
%    It comprises all persons economically active in agriculture as
%    well as their non-working dependents. It is not necessary that
%    this referred population exclusively come from rural population.
%
%    \source{FILL ME}
%    \owner{FILL ME}
% \end{metadata}
% \end{MetadataCollection}
% \end{verbatim}
%
% \DescribeMacro{\refMetadata}
% The metadata is referenced by the command
% \cmd{\refMetdata}\marg{key}, for example
% \begin{verbatim}
% \refMetadata{P1.DEM.FAO.POP.AGR}
% \end{verbatim}
% This command will be typset as
% \begin{quote}
%   Source: Agricultural population, page NNNN.
% \end{quote}
% This command must \emph{not} occur in the caption of the chart, map
% or table.
%
%
% Note that the package automatically provides backreferencing: all
% charts, maps and tables where the medatada is referenced, are
% mentioned in the corresponding metadata section.
%
% The sources of each chart, map or table can be shown in the lists of
% charts, tables, maps or not.  The key |metadataInLists| (by default
% |false|) determines whether they are shown there.  To make them
% visible, put before the lists
% \begin{verbatim}
% \faosetup{metadataInLists=true}
% \end{verbatim}
% 
%
%
%
%\subsection{Concepts and Methods}
%\label{sec:ug_concepts}
% 
% \DescribeEnv{ConceptsAndMethods}
% The environment |ConceptsAndMethods| starts a new section ``Concepts
% and Methods''.
% Concepts and methods are collected in the series of |concept|
% environments. Each environment has one obligatory field: the name of
% the concept, for example:
% \begin{verbatim}
% \begin{ConceptsAndMethods}
%   \begin{concept}{Gross domestic product}
%     Gross domestic product (GDP) is the market value of all officially
%     recognized final goods and services produced within a country in a
%     given period of time. 
%   \end{concept}
%   \begin{concept}{Gross state product}
%     Gross state product (GSP), or gross regional product (GRP), is a
%     measurement of the economic output of a state or province (i.e.,
%     of a subnational entity). It is the sum of all value added by
%     industries within the state and serves as a counterpart to the
%     gross domestic product (GDP). 
%   \end{concept}
% \end{ConceptsAndMethods}
% \end{verbatim}
% 
% 
%
%\subsection{Further Reading}
%\label{sec:ug_further_reading}
% 
% \DescribeEnv{freading}
% The special environment |freading| is used for the ``further
% reading'' sections of the book.  It starts the text from the new
% page and changes some defaults.  
%
%
%\subsection{Subscripts in Text}
%\label{sec:ug_textsubscript}
%
% \DescribeMacro{\textsubscript}
% The standard \LaTeX{} defines \cmd{\textsuperscript}.  The class
% adds a similar \cmd{\textsubscript} command.
%
% 
%
%
%\StopEventually{%
% \clearpage
% \bibliography{faosyb}
% \bibliographystyle{unsrt}}
% \clearpage
%
%
%\section{Implementation}
%\label{sec:implementation}
%
%
% 
%\subsection{Options}
%\label{sec:options}
% 
% \begin{macro}{\faoyearbook@size@warning}
% The font-changing options are not used in our setup, so we just
% produce a warning:
%    \begin{macrocode}
\long\def\faoyearbook@size@warning#1{%
  \ClassWarning{faoyearbook}{Size-changing option #1 will not be
    honored}}%
\DeclareOption{8pt}{\faoyearbook@size@warning{\CurrentOption}}%
\DeclareOption{9pt}{\faoyearbook@size@warning{\CurrentOption}}%
\DeclareOption{10pt}{\faoyearbook@size@warning{\CurrentOption}}%
\DeclareOption{11pt}{\faoyearbook@size@warning{\CurrentOption}}%
\DeclareOption{12pt}{\faoyearbook@size@warning{\CurrentOption}}%      
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\ifprint}
%   We have a flag shich shows whether we are in Web or print mode
%    \begin{macrocode}
\newif\ifprint
\printfalse
\DeclareOption{web}{\printfalse}
\DeclareOption{print}{\printtrue
  \PassOptionsToPackage{papersize={230mm,317mm},layout=a4paper,
    layouthoffset=1cm,layoutvoffset=1cm,twoside}{geometry}}
%    \end{macrocode}   
% \end{macro}
%
% \begin{macro}{\ifDraft}
%   If we are in `Draft' or `draft mode', we print a word `draft'
%   across the page:
%    \begin{macrocode}
\newif\ifDraft
\Draftfalse
\DeclareOption{Draft}{\Drafttrue}
\DeclareOption{draft}{\Drafttrue}
%    \end{macrocode}
%   
% \end{macro}
%
% \begin{macro}{\if@issuumode}
%   Whether we need issuu-style links
%    \begin{macrocode}
\newif\if@issuumode
\@issuumodefalse
\DeclareOption{issuu}{\@issuumodetrue}
%    \end{macrocode}
%   
% \end{macro}
%
% All other options are just sent to the main class:
%    \begin{macrocode}
\DeclareOption*{\PassOptionsToClass{\CurrentOption}{report}}
\ProcessOptions\relax
%    \end{macrocode}
% 
%\subsection{Loading Class and Packages}
%\label{sec:loading}
%
% We start with the base class and some packages
%    \begin{macrocode}
\LoadClass[10pt,twoside,twocolumn]{report}
\RequirePackage{graphicx,xkeyval}
\RequirePackage[table,cmyk]{xcolor}
\RequirePackage{tikz,geometry,dcolumn}
\usetikzlibrary{calc}
\RequirePackage{fancyhdr}
\RequirePackage{lscape,longtable,siunitx,booktabs}
\RequirePackage{multicol,atbegshi,picture,hhline,afterpage}
\RequirePackage[T1]{fontenc}
\RequirePackage[utf8x]{inputenc}
\RequirePackage{pdfpages}
\RequirePackage[authoryear]{natbib}
\RequirePackage[breaklinks]{hyperref}
\RequirePackage{bookmark}
\if@issuumode
\RequirePackage{issuulinks}
\fi
%    \end{macrocode}
%
% Options for the hyperef package are set as follows:
%    \begin{macrocode}
\ifprint
\hypersetup{breaklinks,colorlinks=false,pdfborder=0 0 0,    
  pdfauthor={FAO},
  pdfsubject={Statistical Yearbook of the Food And Agricultural Organization for the United Nations},
  pdftitle={Statistical Yearbook of the Food And Agricultural Organization for the United Nations},
  pdfkeywords={FAO, Food Security, Undernourishment, Sustainable agriculture},
  pdfpagelayout=TwoColumnLeft,
  pdfnewwindow=true
}
\else
\hypersetup{breaklinks,colorlinks=false,pdfborder=0 0 0,    
  pdfauthor={FAO},
  pdfsubject={Statistical Yearbook of the Food And Agricultural Organization for the United Nations},
  pdftitle={Statistical Yearbook of the Food And Agricultural Organization for the United Nations},
  pdfkeywords={FAO, Food Security, Undernourishment, Sustainable agriculture},
  pdfpagelayout=TwoColumnRight,
  pdfnewwindow=true
}
\fi
%    \end{macrocode}
%
%\subsection{Color}
%\label{sec:colors}
%
% We need to tell the printer that we are using CMYK color model.  The
% following is taken from the |pdfx| package (the package itself is
% not too easy to make work).
%    \begin{macrocode}
\def\@pctchar{\expandafter\@gobble\string\%}
\def\@bchar{\expandafter\@gobble\string\\}
\immediate\pdfobj stream attr{/N 4}  file{FOGRA39L.icc}
\edef\OBJ@CVR{\the\pdflastobj}
\pdfcatalog{/OutputIntents [ <<
  /Type/OutputIntent
  /S/GTS_PDFX
  /OutputCondition (FOGRA39)
  /OutputConditionIdentifier (FOGRA39 \@bchar(ISO Coated v2
   300\@pctchar\space \@bchar(ECI\@bchar)\@bchar))
  /DestOutputProfile \OBJ@CVR\space 0 R
  /RegistryName(http://www.color.org)
 >> ]}
%    \end{macrocode}
%
%\subsection{Key-Value Interface}
% \label{sec:keyval}
%
% \begin{macro}{\faoset}
%   We define the family |fao| for our keys:
%    \begin{macrocode}
\def\faoset#1{\setkeys{fao}{#1}}
%    \end{macrocode}
%   
% \end{macro}
%
% One of the important keys is |year|
%    \begin{macrocode}
\define@key{fao}{year}{\gdef\fao@year{#1}}
\faoset{year=20XX}
%    \end{macrocode}
% 
%
%\subsection{Fonts}
%\label{sec:fonts}
%
% We use arev for mathematics:
%    \begin{macrocode}
\RequirePackage{arevmath}
%    \end{macrocode}
%
% For body text we use PT~Sans:
%    \begin{macrocode}
\def\PTSans@scale{0.95}
\def\PTSansNarrow@scale{0.95}
\def\PTSansCaption@scale{0.95}
\renewcommand{\sfdefault}{PTSans-TLF}
\renewcommand{\familydefault}{\sfdefault}
\renewcommand{\bfdefault}{b}
%    \end{macrocode}
%
% \begin{macro}{\narrowfamily}
%   We declare a new family, \cs{narrowfamily}:
%    \begin{macrocode}
\DeclareRobustCommand\narrowfamily{\fontfamily{PTSansNarrow-TLF}\selectfont}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\textnarrow}
%   And the matching \cs{textnarrow} command:
%    \begin{macrocode}
\DeclareTextFontCommand{\textnarrow}{\narrowfamily}
%    \end{macrocode}   
% \end{macro}
%
%
% \begin{macro}{\captionfamily}
%   Same with  \cs{captionfamily}:
%    \begin{macrocode}
\DeclareRobustCommand\captionfamily{\fontfamily{PTSansCaption-TLF}\selectfont}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\textcaption}
%   And the matching \cs{textcaption} command:
%    \begin{macrocode}
\DeclareTextFontCommand{\textcaption}{\captionfamily}
%    \end{macrocode}   
% \end{macro}
%
%
% \begin{macro}{\normalsize}
%   The basic size is 9.6pt:
%    \begin{macrocode}
\renewcommand\normalsize{%
   \@setfontsize\normalsize{9.6pt}{\@xiipt}%
   \abovedisplayskip 10\p@ \@plus2\p@ \@minus5\p@
   \abovedisplayshortskip \z@ \@plus3\p@
   \belowdisplayshortskip 6\p@ \@plus3\p@ \@minus3\p@
   \belowdisplayskip \abovedisplayskip
   \let\@listi\@listI}
\normalsize
%    \end{macrocode}   
% \end{macro}
%
%
% \begin{macro}{\small}
% This is the small size:
%    \begin{macrocode}
\renewcommand\small{%
   \@setfontsize\small\@ixpt{10}%
   \abovedisplayskip 8.5\p@ \@plus3\p@ \@minus4\p@
   \abovedisplayshortskip \z@ \@plus2\p@
   \belowdisplayshortskip 4\p@ \@plus2\p@ \@minus2\p@
   \def\@listi{\leftmargin\leftmargini
               \topsep 4\p@ \@plus2\p@ \@minus2\p@
               \parsep 2\p@ \@plus\p@ \@minus\p@
               \itemsep \parsep}%
   \belowdisplayskip \abovedisplayskip}
%    \end{macrocode}
% \end{macro}
%
%
% We use |rm| style of URL:
%    \begin{macrocode}
\urlstyle{sf}
%    \end{macrocode}
% 
%\subsection{Margins and Paragraphing}
%\label{sec:pars}
%
%  We use a4paper.  
%    \begin{macrocode}
\geometry{layout=a4paper,
  left=2cm,right=2cm,bottom=2.8cm,top=1.5cm,
  columnsep=30pt, twoside}%
\savegeometry{standard}
%    \end{macrocode}
%
% \begin{macro}{\parindent}
% \begin{macro}{\parskip}
%   We use not indented paragraphs with paragraph borders given by
%   skips
%    \begin{macrocode}
\setlength\parindent\z@
\setlength\parskip{6\p@ plus 6\p@ minus 4\p@}
%    \end{macrocode}
%   
% \end{macro}
% \end{macro}
%
% \begin{macro}{\footskip}
%   We need generous foot
%    \begin{macrocode}
\setlength\footskip{18\p@}
%    \end{macrocode}
%   
% \end{macro}
% \begin{macro}{\headheight}
%   We need generous headers
%    \begin{macrocode}
\setlength\headheight{35\p@}
%    \end{macrocode}
%   
% \end{macro}
%
%
%\subsection{Cropmarks}
%\label{sec:cropmarks}
%
% There are several packages that provide crop marks.  Unfortunately
% they do not work for us because they put crop marks at the
% background.  Since we have colored pages, we want crop marks to be
% on the foreground.
%
% In this section we re-implement cropmarks of the \progname{geometry}
% package, putting the marks on the foreground.
%
% We postpone the code to the beginning of the document to get the
% proper value of the switch
%    \begin{macrocode}
\AtBeginDocument{\ifprint
  \AtBeginShipout{%
    \AtBeginShipoutUpperLeftForeground{%
      \color{black}%
      \@tempdima=\Gm@layouthoffset
      \@tempdimb=\Gm@layoutvoffset
      \put(\@tempdima,-\@tempdimb+6\p@){\line(0,1){50}}%
      \put(\@tempdima-6\p@,-\@tempdimb){\line(-1,0){50}}%
      \advance\@tempdima by \Gm@layoutwidth
      \put(\@tempdima,-\@tempdimb+6\p@){\line(0,1){50}}%
      \put(\@tempdima+6\p@,-\@tempdimb){\line(1,0){50}}%
      \advance\@tempdimb by \Gm@layoutheight
      \put(\@tempdima,-\@tempdimb-6\p@){\line(0,-1){50}}%
      \put(\@tempdima+6\p@,-\@tempdimb){\line(1,0){50}}%
      \advance\@tempdima by -\Gm@layoutwidth
      \put(\@tempdima-6\p@,-\@tempdimb){\line(-1,0){50}}%
      \put(\@tempdima,-\@tempdimb-6\p@){\line(0,-1){50}}%
    }}\fi}
%    \end{macrocode}
% 
% In draft mode we put the word `DRAFT' across the page:
%    \begin{macrocode}
\AtBeginDocument{\ifDraft
  \AtBeginShipout{%
    \AtBeginShipoutUpperLeft{%
      \color{black!25}%
      \@tempdima=\Gm@layouthoffset
      \@tempdimb=\Gm@layoutvoffset
      \advance\@tempdima by 0.2\Gm@layoutwidth
      \advance\@tempdimb by 0.7\Gm@layoutheight
      \put(\@tempdima,-\@tempdimb){%
        \rotatebox{45}{%
          \fontsize{6cm}{6cm}\selectfont 
          DRAFT}}}}\fi}
%    \end{macrocode}
% 
% 
%
%\subsection{Setting Colors and Icons}
%\label{sec:setting_colors_icons}
%
% \begin{macro}{\fao@color@string}
%   This is the command that remembers the present color for TOC
%    \begin{macrocode}
\def\fao@color@string{0,0,0}
%    \end{macrocode}
%   
% \end{macro}
%
% \begin{macro}{@bgcolor@next}
%   We store the next background color in |@bgcolor@next|.
%  We store the next heading background in |@tableheadcolor@next|.
% \begin{macro}{\setbgcolor}
%   The command |\setbgcolor| selects the next background color:
%    \begin{macrocode}
\def\setbgcolor#1{\colorlet{@bgcolor@next}[cmyk]{#1}%
  \addtocontents{toc}{\string\colorlet{@bgcolor}[cmyk]{#1}}%
  \gdef\fao@color@string{#1}}
\setbgcolor{white}
%    \end{macrocode}
% \end{macro}   
% \end{macro}
%
%  The key-value interface for the same command:
%    \begin{macrocode}
\define@key{fao}{bgcolor}{\setbgcolor{#1}}
%    \end{macrocode}
%  
% And for separate setting of |@tableheadcolor|
%    \begin{macrocode}
\define@key{fao}{tableheadcolor}{\colorlet{@tableheadcolor}[cmyk]{#1}}
%    \end{macrocode}
%
% \begin{macro}{@bgcolor}
% The current color is in the macro |@bgcolor|.
% \begin{macro}{@tableheadcolor}
% \begin{macro}{\selectcolor}
%   This command makes the actual color change:
%    \begin{macrocode}
\def\selectcolor{\colorlet{@bgcolor}{@bgcolor@next}%
  \colorlet{@tableheadcolor}{@bgcolor!30}}
\selectcolor
%    \end{macrocode}
%   
% \end{macro}
% \end{macro}
% \end{macro}
% 
% \begin{macro}{@tablebg}
%   The color for table pages
%    \begin{macrocode}
\define@key{fao}{tablebg}{\colorlet{@tablebg}[cmyk]{#1}}
%    \end{macrocode}
%   
% \end{macro}
%
% \begin{macro}{\seticon}
%   Setting the next icon for the part
%    \begin{macrocode}
\def\seticon#1{\gdef\next@icon{#1}}
\define@key{fao}{icon}{\seticon{#1}}
%    \end{macrocode}
%   
% \end{macro}
%
% \begin{macro}{\selecticon}
% \begin{macro}{\currenticon}
%   The actual icon change
%    \begin{macrocode}
\def\selecticon{\gdef\currenticon{\next@icon}}
%    \end{macrocode}
%   
% \end{macro}
% \end{macro}
%
%
%\subsection{Page Styles}
%\label{sec:pagestyles}
%
% \begin{macro}{standardpagestyle}
%   This is our main page style
%    \begin{macrocode}
\fancypagestyle{standardpagestyle}{%
  \fancyhf{}%
  \fancyhfoffset[LR]{1.8cm}%
  \renewcommand\headrulewidth{\z@}%
  \fancyhead[LE]{\color{@bgcolor}\captionfamily
    \Huge\ifnum\thepart>0\relax
    \thepart\fi\normalsize\dotfill}%
  \fancyhead[LO]{\color{@bgcolor}\normalsize\dotfill\captionfamily
    \Huge\leftmark
    \ifx\currenticon\@undefined\else\space
  \raisebox{-0.25\totalheight}{%
    \includegraphics[width=1.1cm]{\currenticon}}\fi}%
  \fancyfoot[LE]{
    \bgroup
    \setlength\fboxsep{10\p@}%
    \color{@bgcolor}%
    \raisebox{-\height}{\fcolorbox{@bgcolor}{@bgcolor}{\color{white}\thepage}}%
    \normalsize\dotfill
    \raisebox{-\height}{\textbf{FAO} Statistical Yearbook \textbf{\fao@year}}%
  \egroup}%
  \fancyfoot[LO]{
    \bgroup
    \setlength\fboxsep{10\p@}%
    \color{@bgcolor}%
    \raisebox{-\height}{\rightmark}%
    \normalsize\dotfill
    \raisebox{-\height}{\fcolorbox{@bgcolor}{@bgcolor}{\color{white}\thepage}}%
  \egroup}%
}
\pagestyle{standardpagestyle}
%    \end{macrocode}
%   
% \end{macro}
%
% \begin{macro}{partpagestyle}
%   The page style for the parts introduction
%    \begin{macrocode}
\fancypagestyle{partpagestyle}{%
  \fancyhf{}%
  \fancyhead[L]{%
    \begin{picture}(0,0)
      \put(-14,45){\color{@bgcolor!10}%
        \raisebox{-\height}{%
          \rule{\dimexpr(\textwidth+4.5cm)}{\dimexpr(\textheight+4.5cm)}}}
    \end{picture}}
  \fancyhfoffset[LR]{1.8cm}%
  \renewcommand\headrulewidth{\z@}%
  \fancyfoot[LE]{
    \bgroup
    \setlength\fboxsep{10\p@}%
    \color{@bgcolor}%
    \raisebox{-\height}{\fcolorbox{@bgcolor}{@bgcolor}{\color{white}\thepage}}%
    \normalsize\dotfill
    \raisebox{-\height}{\textbf{FAO} Statistical Yearbook \textbf{\fao@year}}%
  \egroup}%
  \fancyfoot[LO]{
    \bgroup
    \setlength\fboxsep{10\p@}%
    \color{@bgcolor}%
    \raisebox{-\height}{\rightmark}%
    \normalsize\dotfill
    \raisebox{-\height}{\fcolorbox{@bgcolor}{@bgcolor}{\color{white}\thepage}}%
  \egroup}%
}
%    \end{macrocode}
%   
% \end{macro}
%
%\subsection{Nonfloats}
%\label{sec:floats}
%
% In Faoyearbook we used float package.  Since we changed too much in
% the internals, here we just rewrite the code from scratch.
%
% \begin{macro}{\nf@vert@sep}
%   Vertical separation between the floats
%    \begin{macrocode}
\newlength\nf@vert@sep
\setlength\nf@vert@sep{30pt}
%    \end{macrocode}
% \end{macro}
%   
% \begin{macro}{\nf@width}
%   The width of the nonfloat
%    \begin{macrocode}
\newlength\nf@width
%    \end{macrocode}
%   
% \end{macro}
%
% \begin{macro}{\nf@height}
%   The height of the nonfloat
%    \begin{macrocode}
\newlength\nf@height
%    \end{macrocode}
%   
% \end{macro}
%
% \begin{macro}{\nf@captionheight}
%   The height reserved for the caption
%    \begin{macrocode}
\newlength\nf@captionheight
\setlength\nf@captionheight{32\p@}
%    \end{macrocode}
%   
% \end{macro}
%
% \begin{macro}{\nf@sourceheight}
%   The height reserved for the source lines
%    \begin{macrocode}
\newlength\nf@sourceheight
\setlength\nf@sourceheight{48\p@}
%    \end{macrocode}
%   
% \end{macro}
%
%
% \begin{macro}{\nf@margin}
%   Margin for floats
%    \begin{macrocode}
\newlength\nf@margin
\setlength\nf@margin{12\p@}
%    \end{macrocode}
%   
% \end{macro}
%
% \begin{macro}{\nf@trianglebase}
%   The design requres a triangle under the caption.  Here it is
%    \begin{macrocode}
\newlength\nf@trianglebase
\setlength\nf@trianglebase{12\p@}
%    \end{macrocode}
%   
% \end{macro}
%
% \begin{macro}{\chartwidth}
%   The resulting width of a chart
%    \begin{macrocode}
\newlength\chartwidth
%    \end{macrocode}
%   
% \end{macro}
%
% \begin{macro}{\chartheight}
%   The resulting width of a chart
%    \begin{macrocode}
\newlength\chartheight
%    \end{macrocode}
%   
% \end{macro}
%
% \begin{macro}{\nf@topskip}
%   Top separation for a nonfloat
\newskip\nf@topskip
% \end{macro}
%
% \begin{macro}{\nf@bottomskip}
%   Bottom separation for a nonfloat
\newskip\nf@bottomskip
% \end{macro}
%
%
%
% \begin{macro}{\nonfloat@type}
%   The counter to keep the next type to assign
%    \begin{macrocode}
\newcount\nonfloat@type
\nonfloat@type=4\relax
%    \end{macrocode}
%   
% \end{macro}
%
% \begin{macro}{\nf@contentsbox}
%   The box to keep the contents of the float
%    \begin{macrocode}
\newbox\nf@contentsbox
%    \end{macrocode}
%   
% \end{macro}
%
% \begin{macro}{\nf@mainbox}
%   The box for the float
%    \begin{macrocode}
\newbox\nf@mainbox
%    \end{macrocode}
%   
% \end{macro}
%
% \begin{macro}{\newnon@float}
%   The macro \cs{newnon@float} has the following arguments:  TYPE,
%   EXT, NAME, LISTNAME, for example
% \begin{verbatim}
% \newnon@float{map}{lom}{Map}{List of Maps}
% \end{verbatim}
%   It defines a nonfloat with these parameters.
%    \begin{macrocode}
\def\newnon@float#1#2#3#4{%
%    \end{macrocode}
%   First, we need to define |\ftype@TYPE|: the type of the float.
%   Note that tables are taken, so we need to make a special care of
%   nonfloats that correspond to floats.
%    \begin{macrocode}
  \expandafter\ifx\csname ftype@#1\endcsname\relax
    \expandafter\edef\csname ftype@#1\endcsname{\the\nonfloat@type}%
    \multiply\nonfloat@type by 2\relax
  \fi
%    \end{macrocode}
% Now we define the extension for the floats
%    \begin{macrocode}
  \expandafter\def\csname ext@#1\endcsname{#2}%
%    \end{macrocode}
% The macro \cs{fnum@TYPE} formats the line like ``Figure 1''.  We
% need to check whether the counter is defined
%    \begin{macrocode}
  \expandafter\ifx\csname the#1\endcsname\relax  
  \newcounter{#1}\fi
  \expandafter\def\csname fnum@#1\endcsname{#3~\csname
    the#1\endcsname}%
%    \end{macrocode}
% Now we want to define the environment TYPE.  Since it might be
% already defined, we first delete this definition, otherwise
% \cs{newenvironment} might throw an error
%    \begin{macrocode}
  \expandafter\let\csname #1\endcsname\relax
  \expandafter\let\csname end#1\endcsname\relax
%    \end{macrocode}
%  And the actual definition
%    \begin{macrocode}
  \newenvironment{#1}{\non@float{#1}}{\endnon@float}}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@getfirstletter}
%   An aux macro to get a first letter of a word.  Used in constructs
% \begin{verbatim}
% \edef\U{\@getfirstletter{AAAAA\@endword}}}
% \end{verbatim}
%   
%    \begin{macrocode}
\def\@getfirstletter#1{\@@getfirstletter#1}
\def\@@getfirstletter#1{#1\@gobbleword}
\def\@gobbleword#1\@endword{}
%    \end{macrocode}
%   
% \end{macro}
%
%
% \begin{macro}{\non@float}
%   Now we are ready to define the \cs{non@float} macro.  It has three
%   parameters:  TYPE, SIZE and PLACEMENT. \cs{nf@source} is the
%   source of the float.
%    \begin{macrocode}
\def\non@float#1#2#3{
  \def\@captype{#1}%
  \def\nf@size{#2}%
  \def\nf@placement{#3}%
%    \end{macrocode}
% The macro |\nf@vert@pos| is either |u| or |l|
%    \begin{macrocode}
  \lowercase{\xdef\nf@vert@pos{\@getfirstletter#3\@endword}}
  \global\let\nf@source\@empty
%    \end{macrocode}
%
% Define the source command inside float
%    \begin{macrocode}
  \def\source##1{\gdef\nf@source{##1}}
%    \end{macrocode}
% 
%
% Define the caption producing command:
%    \begin{macrocode}
\long\def\@makecaption##1##2{\long\gdef\nf@caption{%
    {\bfseries\large\color{white}
      \MakeUppercase{##1}: ##2}}}%
\gdef\nf@caption{}%
%    \end{macrocode}
% 
%
% We calculate the size of the float and skips
%    \begin{macrocode}
  \nf@width=\columnwidth  
  \nf@height=\dimexpr(\textheight/2-\nf@vert@sep)%
  \if\nf@vert@pos u\relax
    \nf@topskip=\z@
    \nf@bottomskip=\nf@vert@sep
  \else
    \nf@topskip=\nf@vert@sep%
    \nf@bottomskip=\z@
  \fi
  \def\tempW{W}%
  \def\tempT{T}%
  \def\tempB{B}%
  \ifx\nf@size\tempW
    \nf@width=\textwidth
  \fi
  \ifx\nf@size\tempT
    \nf@height=\textheight
    \nf@topskip=\z@
    \nf@bottomskip=\z@
  \fi
  \ifx\nf@size\tempB
    \nf@width=\textwidth
    \nf@height=\textheight
    \nf@topskip=\z@
    \nf@bottomskip=\z@
  \fi
  \chartheight=
    \dimexpr(\nf@height-\nf@captionheight-\nf@sourceheight
    -2\nf@margin-\nf@trianglebase)%
  \chartwidth=\dimexpr(\nf@width-2\nf@margin-0.5\nf@trianglebase)%
  \nf@height=\dimexpr(\nf@height+\nf@topskip+\nf@bottomskip)%
%    \end{macrocode}
%
%  Now we construct the main box.
%    \begin{macrocode}
  \global\setbox\nf@contentsbox
    \color@vbox
     \normalcolor
     \vbox to \chartheight
     \bgroup
     \hsize\chartwidth
     \@parboxrestore
     \@floatboxreset
}
%    \end{macrocode}
%  
% 
% \end{macro}
%
% \begin{macro}{\endnon@float}
%   The actual typesetting
%    \begin{macrocode}
\def\endnon@float{\@endfloatbox\par
  \hsize=\nf@width
  \setbox\nf@mainbox=\vbox to \nf@height\bgroup
    \hsize=\chartwidth
    \vskip\nf@topskip
    \noindent
    \begin{picture}(0,0)%
      \put(0,0){\color{@bgcolor}%
        \begin{tikzpicture}[baseline=(current bounding box.north)]
          \fill (0,0) -- (\nf@trianglebase,0) -- 
          (0.5\nf@trianglebase,-\nf@trianglebase) -- cycle;
        \end{tikzpicture}}
    \end{picture}%
    \def\@tempa{chart}%
    \ifx\@tempa\@captype 
    \begin{picture}(0,0)%
      \put(0,0){\color{@bgcolor}%
        \begin{tikzpicture}[baseline=(current bounding box.north)]
          \draw(0,0) -- (\nf@width,0);
          \draw (0.5\nf@trianglebase,-2\nf@trianglebase) -- 
          (0.5\nf@trianglebase,-\chartheight-2\nf@trianglebase
          -\nf@margin) -- 
          (\nf@width-\pgflinewidth, -\chartheight-2\nf@trianglebase
          -\nf@margin) -- (\nf@width-\pgflinewidth, 0);
        \end{tikzpicture}}
    \end{picture}%
    \fi
    {\color{@bgcolor}\color@block{\nf@width}{\nf@captionheight}{.1\p@}}%
    \hskip\dimexpr(\nf@margin+0.5\nf@trianglebase)%
    \vbox to \nf@captionheight\bgroup    
    \nf@caption\vfill
    \egroup\par\nointerlineskip\vskip\nf@trianglebase
    \vskip\nf@margin
    \noindent\hskip\dimexpr(\nf@margin+0.5\nf@trianglebase)%
    \box\nf@contentsbox\par\nointerlineskip
    \vskip\nf@margin
    \hskip\dimexpr(\nf@margin+0.5\nf@trianglebase)%
    \vbox to \nf@sourceheight\bgroup
    \ifx\nf@source\@empty\else
    \noindent{\color{@bgcolor}%
      \rule{.2em}{.2em}~\rule{.2em}{.2em}~%
      \rule{.2em}{.2em}~\rule{.2em}{.2em}~%
      \rule{.2em}{.2em}\par}
    \noindent Source: \nf@source\par\vfill\fi\egroup
    \vfill\egroup
    \edef\nf@currbox{\expandafter\csname nfbox@\nf@size 
      @\nf@placement\endcsname}%
    \global\setbox\nf@currbox=
    \vbox{\box\nf@currbox\nointerlineskip\penalty0\box\nf@mainbox}}
%    \end{macrocode}
%   
% \end{macro}
%
% \begin{macro}{\map}
%   A standard nonfloat:
%    \begin{macrocode}
\newnon@float{map}{lom}{Map}{List of Maps}
%    \end{macrocode}
%   
% \end{macro}
% \begin{macro}{\table}
%   Another one
%    \begin{macrocode}
\newnon@float{table}{lot}{Table}{List of Tables}
%    \end{macrocode}
%   
% \end{macro}
% \begin{macro}{\chart}
%   And another one
%    \begin{macrocode}
\newnon@float{chart}{loc}{Chart}{List of Charts}
%    \end{macrocode}
%   
% \end{macro}
%
%
%\subsection{Output Routine}
%\label{sec:output_routine}
%
% This is hairy because output routines are hairy\dots
%
% We need several insert boxes.  Naming convention: the letter for the
% box size and two letter code for the location.  We use \cs{newbox}
% instead of \cs{newinsert} since we do not use associated \cs{count},
% \cs{dimen} and \cs{skip} registers.
%    \begin{macrocode}
\newbox\nfbox@S@ul
\newbox\nfbox@S@ur
\newbox\nfbox@S@ll
\newbox\nfbox@S@lr
\newbox\nfbox@S@UL
\newbox\nfbox@S@UR
\newbox\nfbox@S@LL
\newbox\nfbox@S@LR
\newbox\nfbox@T@ul
\newbox\nfbox@T@ur
\newbox\nfbox@T@UL
\newbox\nfbox@T@UR
\newbox\nfbox@W@ul
\newbox\nfbox@W@ll
\newbox\nfbox@W@UL
\newbox\nfbox@W@LL
\newbox\nfbox@B@ul
\newbox\nfbox@B@UL
%    \end{macrocode}
% 
% \begin{macro}{\@tempboxb}
%   Standard \LaTeX\ has \cs{@tempboxa}.  We need more\dots
%    \begin{macrocode}
\ifx\@tempboxb\@undefined
  \newbox\@tempboxb
\fi
%    \end{macrocode}
%   
% \end{macro}
%
%
% \begin{macro}{\standard@output}
%   The standard \LaTeX\ output routine is saved as
%   \cs{standard@output}.  We use it for one column pages---maybe one
%   even wants a standard float here?
%    \begin{macrocode}
\edef\standard@output{\the\output}
%    \end{macrocode}
%   
% \end{macro}
%
% \begin{macro}{\output}
%   Right now we use standard output on one column pages and the new
%   one with two columns
%    \begin{macrocode}
\output{\if@twocolumn\the\nf@output\else\standard@output\fi}
%    \end{macrocode}
%   
% \end{macro}
%
% \begin{macro}{\nf@output}
%   Here we define our own output routine.
%    \begin{macrocode}
\newtoks\nf@output
\nf@output {%
%    \end{macrocode}
%
% We define the current boxes 
% \cs{curr@nfbox...}.  Also, |uc| or |lc| mean Upper or Lower Current column
%    \begin{macrocode}
  \ifodd\c@page
    \global\let\curr@nfbox@S@ul\nfbox@S@UL
    \global\let\curr@nfbox@S@ur\nfbox@S@UR
    \global\let\curr@nfbox@S@ll\nfbox@S@LL
    \global\let\curr@nfbox@S@lr\nfbox@S@LR
    \global\let\curr@nfbox@T@ul\nfbox@T@UL
    \global\let\curr@nfbox@T@ur\nfbox@T@UR
    \global\let\curr@nfbox@W@ul\nfbox@W@UL
    \global\let\curr@nfbox@W@ll\nfbox@W@LL
    \global\let\curr@nfbox@B@ul\nfbox@B@UL
  \else
    \global\let\curr@nfbox@S@ul\nfbox@S@ul
    \global\let\curr@nfbox@S@ur\nfbox@S@ur
    \global\let\curr@nfbox@S@ll\nfbox@S@ll
    \global\let\curr@nfbox@S@lr\nfbox@S@lr
    \global\let\curr@nfbox@T@ul\nfbox@T@ul
    \global\let\curr@nfbox@T@ur\nfbox@T@ur
    \global\let\curr@nfbox@W@ul\nfbox@W@ul
    \global\let\curr@nfbox@W@ll\nfbox@W@ll
    \global\let\curr@nfbox@B@ul\nfbox@B@ul
  \fi
  \if@firstcolumn
    \global\let\curr@nfbox@S@uc\curr@nfbox@S@ul
    \global\let\curr@nfbox@S@lc\curr@nfbox@S@ll
    \global\let\curr@nfbox@T@uc\curr@nfbox@T@ul
  \else
    \global\let\curr@nfbox@S@uc\curr@nfbox@S@ur
    \global\let\curr@nfbox@S@lc\curr@nfbox@S@lr
    \global\let\curr@nfbox@T@uc\curr@nfbox@T@ur
  \fi
  \let \par \@@par
%    \end{macrocode}
%    \begin{macrocode}
%
% There are several possibilities when we start the output routine for
% a single column in a two-column layout.
% \begin{enumerate}
% \item Wide or big non-floats completely cover the page.  In this
% case we do not need to create columns, and directly go to the
% output.
% \item The columnd is occupied by tall or single nonfloats.  We make
% a column of nonfloats and send it further.
% \item There is room for text on the page, but its height
% (\cs{@colroom}) is different from the one known to the page builder
% (\cs{vsize}).  In this case we change \cs{vsize} and return.
% \item The room for text is exactly \cs{vsize}.  In this case we form
% a column and return.
% \end{enumerate}
%    \begin{macrocode}
  \global\@colht=\textheight
  \ifdim\ht\curr@nfbox@B@ul>0.5\baselineskip
    \global\advance\@colht by -\textheight
  \fi
  \ifdim\ht\curr@nfbox@W@ul>0.5\baselineskip
    \global\advance\@colht by -0.5\textheight
  \fi
  \ifdim\ht\curr@nfbox@W@ll>0.5\baselineskip
    \global\advance\@colht by -0.5\textheight
  \fi
  \ifdim\@colht < \baselineskip
    \nf@output@widepage
  \else
    \nf@makecol
  \fi
}
%    \end{macrocode}
%   
% \end{macro}
%
% \begin{macro}{\nf@output@widepage}
%   The macro \cs{nf@output@widepage} outputs a page completely filled
%   by wide pictures.
%    \begin{macrocode}
\def\nf@output@widepage{%
  \if@firstcolumn\else
  \ClassError{faosyb}{Wide or big nonfloats defined too late.  Move
    them up}{I encountered Big or Wide floats when I already made the
    first column.  Please move them up}
  \fi
  \ifdim\ht\curr@nfbox@B@ul>0.5\baselineskip
     \global\setbox\@outputbox\vsplit\curr@nfbox@B@ul to \textheight
  \else
     \setbox\@tempboxa\vsplit\curr@nfbox@W@ul to 0.5\textheight
     \setbox\@tempboxb\vsplit\curr@nfbox@W@ll to 0.5\textheight
     \setbox\@outputbox\vbox\bgroup
        \box\@tempboxa
        \nointerlineskip
        \box\@tempboxb
     \egroup
  \fi
  \global\vsize\textheight
  \global\@colht\textheight
  \@outputpage
}
%    \end{macrocode}
%   
% \end{macro}
%
%
% \begin{macro}{\nf@makecol}
%   This macro tries to make one column of text.  If successful, it
%   puts first column into temporary storage, and outputs the page
%   when or if the second column is ready.
%
%   When we start \cs{nf@makecol}, \cs{@colht} already reflects
%   possible wide nonfloats.  This to get \cs{@colroom}, we need to
%   take into account only the narrow ones
%    \begin{macrocode}
\def\nf@makecol{%
  \global\@colroom\@colht
  \ifdim\ht\curr@nfbox@T@uc>0.5\baselineskip
     \global\@colroom=0pt
  \fi
  \ifdim\ht\curr@nfbox@S@uc>0.5\baselineskip
     \global\advance\@colroom by -0.5\textheight
  \fi
  \ifdim\ht\curr@nfbox@S@lc>0.5\baselineskip
     \global\advance\@colroom by -0.5\textheight
  \fi
%    \end{macrocode}
%
%  Now there could be two cases.  If \cs{@colroom} is small, we fill
%  the column with the non-floats only.  Otherwise we have a ``mixed''
%  column with both text and nonfloats.
%    \begin{macrocode}
  \ifdim\@colroom<0.5\baselineskip
    \nf@makenfcol
    \unvbox\@cclv
  \else
    \nf@makemixedcol
  \fi}
%    \end{macrocode}
%   
% \end{macro}
%
%
% \begin{macro}{\nf@makenfcol}
%   This macro outputs a column with only non-floats.  If it is
%   called, we already know that the narrow non-floats would fill the
%   column, so we do not do any additional checks.
%    \begin{macrocode}
\def\nf@makenfcol{%
  \ifdim\@colht>0.9\textheight  % one tall or two squares
    \ifdim\ht\curr@nfbox@T@uc>0.5\baselineskip
      \setbox\@outputbox\vbox\bgroup
      \boxmaxdepth \@maxdepth
      \vsplit \@curr@nfbox@T@uc to \textheight
      \egroup
    \else
     \setbox\@outputbox\vbox\bgroup
      \boxmaxdepth \@maxdepth
      \vsplit\curr@nfbox@S@uc to 0.5\textheight
       \nointerlineskip
       \vsplit\curr@nfbox@S@lc to 0.5\textheight
     \egroup
    \fi
  \else  % one square
    \ifdim\ht\curr@nfbox@S@uc>0.49\textheight
      \setbox\@outputbox\vsplit \curr@nfbox@S@uc to 0.5\textheight
    \else
      \setbox\@outputbox\vsplit \curr@nfbox@S@lc to 0.5\textheight
    \fi
  \fi
  \nf@opcol}
%    \end{macrocode}
%   
% \end{macro}
%
% \begin{macro}{\nf@makemixedcol}
%   This macrois used when we have a mix of text with nonfloats (or
%   possibly just text).  
%
%   We check whether the page builder has the right idea about
%   the text size;  if not, we return from the output routine
%    \begin{macrocode}
\def\nf@makemixedcol{%
  \ifdim\@colroom=\vsize
    \nf@makemixedcol@
  \else
    \global\vsize=\@colroom
    \unvbox\@cclv
  \fi}
%    \end{macrocode}
%   
% \end{macro}
%
% \begin{macro}{\nf@makmixedcol@}
%   And now the real work of \cs{nf@makemixedcol@}
%    \begin{macrocode}
\def\nf@makemixedcol@{%
   \ifvoid\footins
     \setbox\@outputbox \box\@cclv 
   \else
     \setbox\@outputbox \vbox {%
       \boxmaxdepth \@maxdepth
       \unvbox \@cclv
       \vskip \skip\footins
       \color@begingroup
         \normalcolor
         \footnoterule
         \unvbox \footins
       \color@endgroup
       }%
   \fi
   \ifdim\ht\curr@nfbox@S@uc>0.49\textheight
     \setbox\@tempboxa\vsplit\curr@nfbox@S@uc to 0.5\textheight
     \setbox\@outputbox \vbox 
       \bgroup
         \box\@tempboxa
         \nointerlineskip
         \box\@outputbox
       \egroup
   \fi
   \ifdim\ht\curr@nfbox@S@lc>0.49\textheight
     \setbox\@tempboxa\vsplit\curr@nfbox@S@lc to 0.5\textheight
     \setbox\@outputbox \vbox 
       \bgroup
         \box\@outputbox
         \nointerlineskip
         \box\@tempboxa
       \egroup
   \fi
   \nf@opcol}
%    \end{macrocode}
%   
% \end{macro}
%
%
% \begin{macro}{\nf@opcol}
%   This is like the standard \LaTeX\ \cs{@outputdblcol}, but with the
%   treatment of wide nonfloats.
%    \begin{macrocode}
\def\nf@opcol{%
  \if@firstcolumn
    \global\@firstcolumnfalse
    \global\setbox\@leftcolumn\box\@outputbox
  \else
    \global\@firstcolumntrue
    \ifdim\ht\curr@nfbox@W@ul>0.5\baselineskip
      \setbox\@tempboxa\vsplit \curr@nfbox@W@ul to 0.5\textheight
    \else
      \setbox\@tempboxb\box\@tempboxa
    \fi
    \setbox\@outputbox \vbox\bgroup
      \box\@tempboxa
      \nointerlineskip
      \hb@xt@\textwidth {%
        \hb@xt@\columnwidth {%
          \box\@leftcolumn \hss}%
        \hfil
        {\normalcolor\vrule \@width\columnseprule}%
        \hfil
        \hb@xt@\columnwidth {%
          \box\@outputbox \hss}%
      }%
    \egroup
    \ifdim\ht\curr@nfbox@W@ll>0.5\baselineskip
      \setbox\@tempboxa\vsplit \curr@nfbox@W@ll to 0.5\textheight
      \setbox\@ouputbox\vbox\bgroup
        \box\@outputpage
        \nointerlineskip
        \box\@tempboxa
      \egroup
    \fi
    \@outputpage
    \global\vsize\textheight
    \global\@colht\textheight
    \global\@colroom\textheight
   \fi}
%    \end{macrocode}
%   
% \end{macro}
%
% \begin{macro}{\standard@clearpage}
%   The usual \cs{clearpage} flushes the floats.  We keep it in
%   \cs{standard@clearpage}
%    \begin{macrocode}
\let\standard@clearpage\clearpage
%    \end{macrocode}
%   
% \end{macro}
% 
% \begin{macro}{\clearpage}
%   Now we can define \cs{clearpage} to take care of the mode:
%    \begin{macrocode}
\def\clearpage{%
  \if@twocolumn
    \nf@clearpage
  \else
    \standard@clearpage
\fi}
%    \end{macrocode}
%   
% \end{macro}
%
% \begin{macro}{\nf@totalheight}
%   The total height of all non-floats
%    \begin{macrocode}
\def\nf@totalheight{\dimexpr(%
  \ht\nfbox@S@UL+
  \ht\nfbox@S@UR+
  \ht\nfbox@S@LL+
  \ht\nfbox@S@LR+
  \ht\nfbox@T@UL+
  \ht\nfbox@T@UR+
  \ht\nfbox@W@UL+
  \ht\nfbox@W@LL+
  \ht\nfbox@B@UL+
  \ht\nfbox@S@ul+
  \ht\nfbox@S@ur+
  \ht\nfbox@S@ll+
  \ht\nfbox@S@lr+
  \ht\nfbox@T@ul+
  \ht\nfbox@T@ur+
  \ht\nfbox@W@ul+
  \ht\nfbox@W@ll+
  \ht\nfbox@B@ul)}
%    \end{macrocode}
%   
% \end{macro}
%
% \begin{macro}{\nf@clearpage}
%   We keep ejecting pages until get rid of nf stuff
%    \begin{macrocode}
\def\nf@clearpage{%
  \ifvmode
    \ifnum \@dbltopnum =\m@ne
      \ifdim \pagetotal <\topskip
        \hbox{}%
      \fi
    \fi
  \fi
  \newpage
  \write\m@ne{}%
  \vbox{}%
  \penalty -\@Mi
  \if@firstcolumn\else
  \null\vfill\newpage\fi
  \ifdim\nf@totalheight>\baselineskip
  \null\vfill\clearpage\fi
}
%    \end{macrocode}
%   
% \end{macro}
%
% \begin{macro}{\clearspread}
%   This is like \cs{cleardoublepage}, but with the logic inverted:
%    \begin{macrocode}
\def\clearspread{\clearpage\if@twoside \ifodd\c@page
    \hbox{}\newpage\if@twocolumn\hbox{}\newpage\fi\fi\fi}
%    \end{macrocode}
%   
% \end{macro}
%
% We need to clear everything at the end
%    \begin{macrocode}
\AtEndDocument{\if@twocolumn
  \ifdim\nf@totalheight>\baselineskip
  \null\vfill\clearpage\fi
\fi}
%    \end{macrocode}
% 
%
%
%\subsection{Sectioning}
%\label{sec:sectioning}
%
% \begin{macro}{\if@mainmatter}
%   This is used to check whether we are at main matter
%    \begin{macrocode}
\newif\if@mainmatter
%    \end{macrocode}
%   
% \end{macro}
% 
% \begin{macro}{\frontmatter}
%   We want Roman numbers for front matter:
%    \begin{macrocode}
\def\frontmatter{\cleardoublepage
  \pagenumbering{roman}\onecolumn\@mainmatterfalse}
%    \end{macrocode}
%   
% \end{macro}
% \begin{macro}{\mainmatter}
%   We want Arabic numbers for main matter:
%    \begin{macrocode}
\def\mainmatter{\cleardoublepage\pagenumbering{arabic}\onecolumn
  \pagestyle{standardpagestyle}%
  \@mainmattertrue}
%    \end{macrocode}
%   
% \end{macro}
% 
% \begin{macro}{\tocdepth}
%   Only sections and up are allowed in TOC:
%    \begin{macrocode}
\setcounter{tocdepth}{1}
%    \end{macrocode}   
% \end{macro}
% \begin{macro}{\secnumdepth}
%   Only the parts are numbered in out setup:
%    \begin{macrocode}
\setcounter{secnumdepth}{-1}
%    \end{macrocode}  
% \end{macro}
% \begin{macro}{\thepart}
%   And the parts are numbered using Arabic numbers:
%    \begin{macrocode}
\renewcommand \thepart {\@arabic\c@part}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\c@fao@partnum}
%   To draw the blobs in part color in the proper position, we need to
%   associate them with parts.   However, some parts are numbered,
%   some are not.  The macro |\fao@partnum| keeps the current part
%   number counted continuously from the beginning to end.
%    \begin{macrocode}
\newcounter{fao@partnum}
\setcounter{fao@partnum}{0}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\fao@currentpartnum}
%   The current value of |\fao@partnum| used in TOC:
%    \begin{macrocode}
\def\fao@currentpartnum{0}
%    \end{macrocode}
%   
% \end{macro}
%
% \begin{macro}{\part}
%  The largest partition in the book
%    \begin{macrocode}
\renewcommand\part{%
  \clearspread
  \selectcolor
  \selecticon
  \addtocontents{toc}{\string\colorlet{@bgcolor}[cmyk]{\fao@color@string}}%
  \stepcounter{fao@partnum}%
  \addtocontents{toc}{%
    \string\gdef\string\fao@currentpartnum{\thefao@partnum}}%
  \rowcolors{2}{@bgcolor!10}{}%
  \pagestyle{partpagestyle}%
  \if@twocolumn
    \onecolumn
  \fi
  \cleardoublepage\bgroup\color{@bgcolor}%
  \secdef\@part\@spart}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\EndPartIntro}
%   This command switches off the  special formatting of part pages:
%    \begin{macrocode}
\def\EndPartIntro{\egroup
  \clearspread\twocolumn
  \pagestyle{standardpagestyle}}
%    \end{macrocode}
%   
% \end{macro}
%
% \begin{macro}{iconfill}
%   Fill a line with the current icon of increasing size.  The
%   parameters are the initial size and number of repetitions
%    \begin{macrocode}
\def\iconfill#1#2{%
  \@tempdima=#1
  \@tempcnta=#2
  \hfill
  \loop
  \includegraphics[width=\@tempdima]{\currenticon}%
  \@tempdima=1.44\@tempdima
  \advance\@tempcnta by -1
  \ifnum\@tempcnta>0\repeat\hfill}
%    \end{macrocode}
%   
% \end{macro}
%
% \begin{macro}{\@part}
%   This is the actual part making macro.
%    \begin{macrocode}
\def\@part[#1]#2{%
      \refstepcounter{part}%
      \addcontentsline{toc}{part}{\thepart\hspace{1em}#1}%
    \markboth{#1}{#1}%
    {\interlinepenalty \@M
      \iconfill{.7cm}{7}\par
      \captionfamily
      \fontsize{240\p@}{240\p@}\selectfont\raggedright\thepart~%
      \parbox[b]{0.8\textwidth}{\fontsize{86\p@}{86\p@}\selectfont
        \raggedright#2}\par\vskip120\p@
    }\par}
%    \end{macrocode}
% \end{macro}
% 
% \begin{macro}{\sectionmark}
%   We do not want to have uppercase sections in the footers
%    \begin{macrocode}
\def\sectionmark#1{\markright{#1}}
%    \end{macrocode}
%   
% \end{macro}
%
%\Finale
%\clearpage
%
%\PrintChanges
%\clearpage
%\PrintIndex
%
\endinput


